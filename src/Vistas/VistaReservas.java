/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controlador.Conexion;
import Controlador.HabitacionData;
import Controlador.HuespedData;
import Controlador.ReservaData;
import Controlador.TipoHabitacionData;
import Modelo.Habitacion;
import Modelo.Huesped;
import Modelo.Reserva;
import Modelo.TipoHabitacion;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import static java.time.temporal.ChronoUnit.DAYS;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Macarena
 */
public class VistaReservas extends javax.swing.JInternalFrame {
    
    private HuespedData huespedData;
    private Conexion conexion;
    private ArrayList <Huesped> listarHuesped;
    private DefaultTableModel modelo;
    private ReservaData reservaData;

    /**
     * Creates new form VistaReservas
     */
    public VistaReservas() {
        initComponents();
        this.conexion = new Conexion();
        this.huespedData = new HuespedData(conexion);
        listarHuesped = huespedData.obtenerHuespedes();
        
        modelo = new DefaultTableModel();   
        armarCabeceraTabla();
        this.reservaData = new ReservaData(conexion);
        borrarFilasTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textCantidadPersonas = new javax.swing.JTextField();
        jCalendarCheckIn = new com.toedter.calendar.JCalendar();
        jLabel4 = new javax.swing.JLabel();
        jCalendarCheckOut = new com.toedter.calendar.JCalendar();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textPrecioTotal = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHabitaciones = new javax.swing.JTable();
        botonConfirmar = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        textDniHuesped = new javax.swing.JTextField();
        botonBuscar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        textNombreHuesped = new javax.swing.JTextField();
        textApellidoHuesped = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jRhabLibres = new javax.swing.JRadioButton();
        jRhabOcupadas = new javax.swing.JRadioButton();
        botonCalcular = new javax.swing.JButton();
        botonLimpiar = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Nuevas Reservas");

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("DNI del Huesped:");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 153));
        jLabel3.setText("Cantidad de Personas:");

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("CheckIn");

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("CheckOut");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("Precio total:");

        tablaHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaHabitaciones);

        botonConfirmar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonConfirmar.setForeground(new java.awt.Color(0, 0, 153));
        botonConfirmar.setText("Confirmar");
        botonConfirmar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConfirmarActionPerformed(evt);
            }
        });

        botonSalir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonSalir.setForeground(new java.awt.Color(0, 0, 153));
        botonSalir.setText("Salir");
        botonSalir.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        botonBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonBuscar.setForeground(new java.awt.Color(0, 0, 153));
        botonBuscar.setText("Buscar");
        botonBuscar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setText("Nombre del Huesped:");

        textNombreHuesped.setEditable(false);

        textApellidoHuesped.setEditable(false);

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 153));
        jLabel9.setText("Apellido del Huesped:");

        jRhabLibres.setText("Habitaciones Libres");
        jRhabLibres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRhabLibresActionPerformed(evt);
            }
        });

        jRhabOcupadas.setText("Habitaciones Ocupadas");
        jRhabOcupadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRhabOcupadasActionPerformed(evt);
            }
        });

        botonCalcular.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonCalcular.setForeground(new java.awt.Color(0, 0, 153));
        botonCalcular.setText("Calcular");
        botonCalcular.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });

        botonLimpiar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonLimpiar.setForeground(new java.awt.Color(0, 0, 153));
        botonLimpiar.setText("Nueva");
        botonLimpiar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        botonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textDniHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                                .addComponent(botonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(textNombreHuesped)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textApellidoHuesped)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textCantidadPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(61, 61, 61))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textPrecioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(botonCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRhabLibres)
                                .addGap(89, 89, 89)
                                .addComponent(jRhabOcupadas))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(192, 192, 192))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCalendarCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCalendarCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(121, 121, 121))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textDniHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textNombreHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textApellidoHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(textCantidadPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCalendarCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCalendarCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRhabLibres)
                    .addComponent(jRhabOcupadas))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textPrecioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConfirmarActionPerformed
        // TODO add your handling code here:
        
        Conexion con = new Conexion();
        ReservaData reservaData = new ReservaData(con);

        int filaSeleccionada=tablaHabitaciones.getSelectedRow();
    
        if(filaSeleccionada!=-1){
                
            Huesped huesped = reservaData.buscarHuespedxDni(textDniHuesped.getText());
            
            
            int idHabitacion=(Integer)tablaHabitaciones.getValueAt(filaSeleccionada,0);
            int numeroHabitacion=(int)tablaHabitaciones.getValueAt(filaSeleccionada,1);
            int idTipoHabitacion=(Integer)tablaHabitaciones.getValueAt(filaSeleccionada, 2); // esto es el ID no tipodehab , dsp hacer THD para buscar el tipo por id
            boolean estado=(boolean)tablaHabitaciones.getValueAt(filaSeleccionada,3);
            int piso=(int)tablaHabitaciones.getValueAt(filaSeleccionada,4);
            
            TipoHabitacionData tipoHabData = new TipoHabitacionData(con);
            TipoHabitacion tipo = new TipoHabitacion();
            tipo = tipoHabData.buscarTipoHabitacion(idTipoHabitacion);
            
            Habitacion hab = new Habitacion(idHabitacion, piso, true, numeroHabitacion, true,tipo);
            
            //jCalendar
            
            SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
            String fechaIn = formato.format(jCalendarCheckIn.getDate());
            String fechaOut = formato.format(jCalendarCheckOut.getDate());
            DateTimeFormatter formato2 = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            LocalDate checkIn = LocalDate.parse(fechaIn, formato2);
            LocalDate checkOut = LocalDate.parse(fechaOut, formato2);
            
            double monto = Double.parseDouble(textPrecioTotal.getText());
            
            Reserva reserva= new Reserva(huesped, hab, Integer.parseInt(textCantidadPersonas.getText()),checkIn, checkOut, 1, monto);
            
            
            reservaData.crearReserva(reserva);
            
            borrarFilasTabla();
       
        }
        
    }//GEN-LAST:event_botonConfirmarActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:

        dispose();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        // TODO add your handling code here:
        
    String dni= null;

        try {
            dni = textDniHuesped.getText();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error en el DNI");
            textDniHuesped.requestFocus();
        }

        Huesped encontrado = new Huesped();
        encontrado = huespedData.buscarHuespedxDni(dni);

        if (!Objects.isNull(encontrado)) {
            // Rellenado de campos luego de buscar            
            
            
            textNombreHuesped.setText(encontrado.getNombre());
            textApellidoHuesped.setText(encontrado.getApellido());           

        } 
        
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void jRhabOcupadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRhabOcupadasActionPerformed
        // TODO add your handling code here:
        
       jRhabLibres.setSelected(false);
       borrarFilasTabla();
       buscarHabitacionesOcupadas(); 
        
    }//GEN-LAST:event_jRhabOcupadasActionPerformed

    private void jRhabLibresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRhabLibresActionPerformed
        // TODO add your handling code here:
        
       jRhabOcupadas.setSelected(false);
       borrarFilasTabla();
       buscarHabitacionesLibres(); 
        
    }//GEN-LAST:event_jRhabLibresActionPerformed

    private void botonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularActionPerformed
        // TODO add your handling code here:
        
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
            String fechaIn = formato.format(jCalendarCheckIn.getDate());
            String fechaOut = formato.format(jCalendarCheckOut.getDate());
            DateTimeFormatter formato2 = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            LocalDate checkIn = LocalDate.parse(fechaIn, formato2);
            LocalDate checkOut = LocalDate.parse(fechaOut, formato2);
        
        long dias =  DAYS.between(checkIn, checkOut);
        
        
        Conexion con = new Conexion();
        ReservaData reservaData = new ReservaData(con);

        int filaSeleccionada=tablaHabitaciones.getSelectedRow();
    
        if(filaSeleccionada!=-1){
                
            Huesped huesped = reservaData.buscarHuespedxDni(textDniHuesped.getText());
            
            
            int idHabitacion=(Integer)tablaHabitaciones.getValueAt(filaSeleccionada,0);
            int numeroHabitacion=(int)tablaHabitaciones.getValueAt(filaSeleccionada,1);
            int idTipoHabitacion=(Integer)tablaHabitaciones.getValueAt(filaSeleccionada, 2); // esto es el ID no tipodehab , dsp hacer THD para buscar el tipo por id
            boolean estado=(boolean)tablaHabitaciones.getValueAt(filaSeleccionada,3);
            int piso=(int)tablaHabitaciones.getValueAt(filaSeleccionada,4);
            
            TipoHabitacionData tipoHabData = new TipoHabitacionData(con);
            TipoHabitacion tipo = new TipoHabitacion();
            tipo = tipoHabData.buscarTipoHabitacion(idTipoHabitacion);
            
            Habitacion hab = new Habitacion(idHabitacion, piso, true, numeroHabitacion, true,tipo);
            
            //jCalendar
            
            double monto = tipoHabData.buscarTipoHabitacion(idTipoHabitacion).getPrecioPorNoche();
            
            double total = monto * dias;
            
            textPrecioTotal.setText(String.valueOf(total));
            
        }
        
    }//GEN-LAST:event_botonCalcularActionPerformed

    private void botonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLimpiarActionPerformed
        // TODO add your handling code here:

        
        limpiar();
    }//GEN-LAST:event_botonLimpiarActionPerformed

    
    private void armarCabeceraTabla(){
        ArrayList<Object> columnas=new ArrayList<Object>();
        columnas.add("Id Habitacion");
        columnas.add("Número de Habitacion");
        columnas.add("Tipo de Habitacion");
        columnas.add("Estado");
        columnas.add("Piso");
        for(Object it:columnas){
        
            modelo.addColumn(it);
        }
        tablaHabitaciones.setModel(modelo);
  }
    
    private void borrarFilasTabla(){
        
        int a = modelo.getRowCount() - 1;
        for (int i= a ; i>=0; i--){
            modelo.removeRow(i);
        }
    }
    
    public void buscarHabitacionesLibres(){
        borrarFilasTabla();
        
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        String fechaIn = formato.format(jCalendarCheckIn.getDate());
        String fechaOut = formato.format(jCalendarCheckOut.getDate());
        DateTimeFormatter formato2 = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        LocalDate checkIn = LocalDate.parse(fechaIn, formato2);
        LocalDate checkOut = LocalDate.parse(fechaOut, formato2);
    
        ReservaData resData = new ReservaData(conexion);
        int cantiPersonas = (Integer.parseInt(textCantidadPersonas.getText()));
        ArrayList<Habitacion> lista = resData.obtenerHabitacionesLibres(checkIn, checkOut,cantiPersonas);
        modelo.setRowCount(0);
        for (Habitacion h : lista) {
            modelo.addRow(new Object[]{h.getIdHabitacion(), h.getNroHabitacion(), h.getIdTipoHabitacion() , h.getEstado(), h.getPiso()});
        }
    }
    
    public void buscarHabitacionesOcupadas(){
        
        borrarFilasTabla();

        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
            String fechaIn = formato.format(jCalendarCheckIn.getDate());
            String fechaOut = formato.format(jCalendarCheckOut.getDate());
            DateTimeFormatter formato2 = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            LocalDate checkIn = LocalDate.parse(fechaIn, formato2);
            LocalDate checkOut = LocalDate.parse(fechaOut, formato2);
    
        ReservaData resData = new ReservaData(conexion);
        int cantiPersonas = (Integer.parseInt(textCantidadPersonas.getText()));
        ArrayList<Habitacion> lista = resData.obtenerHabitacionesOcupadas(checkIn, checkOut,cantiPersonas);
        modelo.setRowCount(0);
        for (Habitacion h : lista) {
            modelo.addRow(new Object[]{h.getIdHabitacion(), h.getNroHabitacion(), h.getIdTipoHabitacion() , h.getEstado(), h.getPiso()});
        }
    }
    
    public void limpiar(){
        textDniHuesped.setText("");
        textNombreHuesped.setText("");
        textApellidoHuesped.setText("");
        textCantidadPersonas.setText("");
        textPrecioTotal.setText("");
        jRhabLibres.setSelected(false);
        jRhabOcupadas.setSelected(false);
    }
    

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonCalcular;
    private javax.swing.JButton botonConfirmar;
    private javax.swing.JButton botonLimpiar;
    private javax.swing.JButton botonSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JCalendar jCalendarCheckIn;
    private com.toedter.calendar.JCalendar jCalendarCheckOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRhabLibres;
    private javax.swing.JRadioButton jRhabOcupadas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaHabitaciones;
    private javax.swing.JTextField textApellidoHuesped;
    private javax.swing.JTextField textCantidadPersonas;
    private javax.swing.JTextField textDniHuesped;
    private javax.swing.JTextField textNombreHuesped;
    private javax.swing.JTextField textPrecioTotal;
    // End of variables declaration//GEN-END:variables
}
